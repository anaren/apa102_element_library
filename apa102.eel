{
    "author": "Anaren Inc.",
    "categories": [
        "Temperature",
        "Sensor"
    ],
    "code": {
        "connected": " \n",
        "global": "",
        "interval": " \n",
        "setup": ""
    },
    "description": "",
    "elements": {},
    "files": {
        "common": {
            "headers": {
                "apa102.h": "// Copyright (c) 2016, Anaren Inc.\r\n// All rights reserved.\r\n// \r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n// \r\n// 1. Redistributions of source code must retain the above copyright notice, this\r\n//    list of conditions and the following disclaimer. \r\n// 2. Redistributions in binary form must reproduce the above copyright notice,\r\n//    this list of conditions and the following disclaimer in the documentation\r\n//    and/or other materials provided with the distribution.\r\n// \r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n// ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n// \r\n// The views and conclusions contained in the software and documentation are those\r\n// of the authors and should not be interpreted as representing official policies, \r\n// either expressed or implied, of the FreeBSD Project.\r\n\r\n#ifndef APA102_H\r\n#define APA102_H\r\n\r\n#include \"../spi/spi.h\"\r\n#include \"apa102_config.h\"\r\n#include <stdint.h>\r\n\r\n#ifndef AIR_LED_ANIMATE_CALLBACK\r\n#define AIR_LED_ANIMATE_CALLBACK\r\ntypedef void (*AIR_LEDAnimateCallback_ptr)(unsigned int frame, unsigned int currentColumn, unsigned int currentRow, unsigned int totalColumns, unsigned int totalRows, void *args, uint8_t *brightness, uint8_t *red, uint8_t *green, uint8_t *blue);\r\n#endif\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n *  Defines, enumerations, and structure definitions\r\n */\r\n// \r\n\r\n\r\nvoid APA102_WriteStartFrame();\r\n\r\nvoid APA102_WriteEndFrame();\r\n\r\nvoid APA102_WriteLEDFrame(uint8_t brightness, uint8_t red, uint8_t green, uint8_t blue);\r\n\r\nvoid APA102_Animate(AIR_LEDAnimateCallback_ptr animation, unsigned int frame, unsigned int numberOfLEDs, unsigned int numberOfLEDsPerRow, bool serpentine, void *args);\r\n\r\n#endif  /* APA102_H */\r\n"
            },
            "objects": {
                "apa102.c": "// Copyright (c) 2016, Anaren Inc.\r\n// All rights reserved.\r\n// \r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n// \r\n// 1. Redistributions of source code must retain the above copyright notice, this\r\n//    list of conditions and the following disclaimer. \r\n// 2. Redistributions in binary form must reproduce the above copyright notice,\r\n//    this list of conditions and the following disclaimer in the documentation\r\n//    and/or other materials provided with the distribution.\r\n// \r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n// ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n// \r\n// The views and conclusions contained in the software and documentation are those\r\n// of the authors and should not be interpreted as representing official policies, \r\n// either expressed or implied, of the FreeBSD Project.\r\n\r\n#include \"apa102.h\"\r\n#include <stddef.h>\r\n\r\nconst uint8_t startFrame[] = {0x00, 0x00, 0x00, 0x00};\r\nconst uint8_t endFrame[] = {0xff, 0xff, 0xff, 0xff};\r\n\r\nvoid APA102_WriteStartFrame()\r\n{\r\n\tAIR_SPI_Write(-1, startFrame, 4);\r\n}\r\n\r\nvoid APA102_WriteEndFrame()\r\n{\r\n\tAIR_SPI_Write(-1, endFrame, 4);\r\n}\r\n\r\nvoid APA102_WriteLEDFrame(uint8_t brightness, uint8_t red, uint8_t green, uint8_t blue)\r\n{\r\n\t//We need to scale our 8-bit brightness to the 5-bit brightness value this led takes\r\n\tbrightness = 0xe0 | ((brightness/0xff) * 0x1f);\r\n\t\r\n\t//Each frame is constructed as brightness, blue, green and red.\r\n\t//[ 3-bit all 1s][ 5-bit for brightness ][ 8-bits for blue ][ 8-bits for green ][ 8-bits for red ]\r\n\tuint8_t tempData[4];\r\n\ttempData[0] = brightness;\r\n\ttempData[1] = blue;\r\n\ttempData[2] = green;\r\n\ttempData[3] = red;\r\n\t\r\n\tAIR_SPI_Write(-1, tempData, 4);\r\n}\r\n\r\n// typedef void (*AIR_LEDAnimateCallback_ptr)(unsigned int frame, unsigned int currentColumn, unsigned int currentRow, unsigned int totalColumns, unsigned int totalRows, void *args, uint8_t *brightness, uint8_t *red, uint8_t *green, uint8_t *blue);\r\nvoid APA102_Animate(AIR_LEDAnimateCallback_ptr animation, unsigned int frame, unsigned int numberOfLEDs, unsigned int numberOfLEDsPerRow, bool serpentine, void *args)\r\n{\r\n\tif(animation == NULL) \r\n\t{\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tAPA102_WriteStartFrame();\r\n\t\r\n\tunsigned int i = 0;\r\n\tunsigned int totalNumberOfRows = numberOfLEDs / numberOfLEDsPerRow;\r\n\t\r\n\tfor(i; i < numberOfLEDs; i++)\r\n\t{\r\n\t\tuint8_t tempBrightness = 0;\r\n\t\tuint8_t tempRed = 0;\r\n\t\tuint8_t tempGreen = 0;\r\n\t\tuint8_t tempBlue = 0;\r\n\t\tunsigned int currentRow = i / numberOfLEDsPerRow;\r\n\t\tunsigned int currentColumn = i % numberOfLEDsPerRow;\r\n\t\t\r\n\t\tif(serpentine && currentRow % 2)\r\n\t\t{\r\n\t\t\tcurrentColumn = numberOfLEDsPerRow - currentColumn;\r\n\t\t}\r\n\t\t\r\n\t\t(*animation)(frame, currentColumn, currentRow, numberOfLEDsPerRow, totalNumberOfRows, args, &tempBrightness, &tempRed, &tempGreen, &tempBlue);\r\n\t\tAPA102_WriteLEDFrame(tempBrightness, tempRed, tempGreen, tempBlue);\r\n\t}\r\n\t\r\n\tAPA102_WriteEndFrame();\r\n}\r\n"
            },
            "other": {
                "apa102_config.h": " \n"
            }
        }
    },
    "label": "APA102 Driver",
    "language": {
        "en": {
            "label": "APA102 Driver"
        }
    },
    "links": {
        "Datasheet": "http://",
        "Product Page": "http://",
        "Wiki Page": "https://atmosphere.anaren.com/wiki/APA102_Driver"
    },
    "manufacturer": "",
    "name": "apa102",
    "signature": "",
    "type": "Embedded Library",
    "version": "1.0.0"
}